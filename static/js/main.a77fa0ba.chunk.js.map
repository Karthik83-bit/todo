{"version":3,"sources":["components/Header.js","components/form.js","components/todos.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","Form","handlesubmit","e","preventDefault","state","inputitem","alert","props","clickhandler","text","completed","id","shortid","generate","setState","inputhandler","bind","this","target","value","onSubmit","style","display","alignItems","marginTop","type","onChange","placeholder","onClick","size","color","Todos","backgroundColor","item","textDecorationLine","itemtext","console","log","completehandler","itemskey","deletehandler","Todolist","list","option","addtodo","selecthandler","todo","key","prev","map","items","filter","justifyContent","flexDirection","height","textAlign","border","Event","uncompletehandler","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a77fa0ba.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h1>TODO</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import { placeholder } from '@babel/types'\r\nimport React, { Component } from 'react'\r\nimport shortid from 'shortid'\r\nimport {FaPlus} from 'react-icons/fa'\r\n class Form extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n           \r\n            inputitem:\"\",\r\n           \r\n         \r\n        }\r\n      //this.handlesubmit=this.handlesubmit.bind(this)\r\n      this.inputhandler=this.inputhandler.bind(this)\r\n    \r\n  \r\n    }\r\n    inputhandler(e){\r\n       \r\n        this.setState({\r\n  inputitem:e.target.value\r\n        }\r\n        )\r\n      }\r\n     handlesubmit=(e)=>{\r\n     e.preventDefault();\r\n     if(this.state.inputitem===\"\"){\r\n         alert(\"field cant be empty\")\r\n     }\r\n   \r\n      else{\r\n      \r\n        this.props.clickhandler({\r\n            text:this.state.inputitem,\r\n            completed:false,\r\n            id:shortid.generate()\r\n           \r\n        })\r\n        this.setState({\r\n            inputitem:\"\"\r\n        })\r\n      }\r\n    }\r\n  \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n         <form  onSubmit={this.handlesubmit} style={{display:\"flex\",alignItems:'center',marginTop:\"10px\"}}>\r\n               <input  className=\"inp\" type=\"text\" value={this.state.inputitem } onChange={this.inputhandler} placeholder=\"...todos\"></input> \r\n               <button className=\"submit\" type=\"submit\" onClick={this.handlesubmit}><FaPlus className=\"submitlogo\" size=\"17px\" color=\"white\"/></button>\r\n             \r\n               </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react'\r\nimport { MdDone,MdDelete } from 'react-icons/md'\r\nimport {FaUndo} from 'react-icons/fa'\r\n\r\n\r\n\r\nclass Todos extends Component {\r\n    render() {\r\n        return (\r\n            <div  className=\"todo\" style={{ backgroundColor:this.props.item.completed ?'black':\"\",\r\n            color:this.props.item.completed ?'white':\"\"}}>\r\n                <p style={{textDecorationLine:this.props.item.completed ?'line-through':\"\",\r\n               \r\n                }}>{this.props.itemtext}</p>\r\n                {console.log(this.props.item.completed)}\r\n               <div className=\"buttons\">\r\n                <button  onClick={this.props.completehandler} key={this.props.itemskey}  ><MdDone size=\"17px\" color=\"black\"/></button>\r\n                <button onClick={this.props.deletehandler}><MdDelete size=\"17px\" color=\"black\"/></button>\r\n                </div>\r\n                {/* <button  onClick={this.props.uncompletehandler} ><FaUndo size=\"17px\" color=\"black\"/></button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todos\r\n","import React, { Component } from 'react'\r\nimport Form from './form'\r\nimport Todos from './todos'\r\n\r\nclass Todolist extends Component {\r\n     \r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            list:[],\r\n            option:\"All\",\r\n        \r\n         \r\n        }\r\n     \r\n        this.addtodo=this.addtodo.bind(this)\r\n      this.completehandler=this.completehandler.bind(this)\r\n   this.selecthandler=this.selecthandler.bind(this)\r\n//    this.uncompletehandler=this.uncompletehandler.bind(this)\r\n      \r\n    }\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n      addtodo(todo){\r\n       \r\n          this.setState({\r\n              list:[...this.state.list,todo],\r\n              \r\n            \r\n          })\r\n          \r\n        \r\n        \r\n      \r\n      }\r\n      completehandler(key){\r\n        \r\n      \r\n          this.setState(prev=>({\r\n            \r\n              list:this.state.list.map((items)=>{\r\n              \r\n                if(key===items.id){\r\n               \r\n                    return{\r\n                      ...items,completed:!prev.completed\r\n                    }\r\n               \r\n                   \r\n                }\r\n              return items\r\n            })\r\n          }))\r\n        }\r\n\r\n       \r\n\r\ndeletehandler(key){\r\n    this.setState({\r\n        list:this.state.list.filter(items=>{\r\n            if(key===items.id){\r\n                return null\r\n            }\r\n            else{\r\n                return items\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nselecthandler(e){\r\n    e.preventDefault()\r\n    this.setState({\r\n        option:e.target.value\r\n    })\r\n    \r\n   \r\n}\r\n\r\n\r\n// uncompletehandler(key){\r\n\r\n//     this.setState({\r\n//         list:this.state.list.filter(items=>{\r\n//             if(items.id===key){\r\n//                 console.log(items)\r\n//                 return {...items,completed:!this.state.completed}\r\n//             }\r\n//             return items\r\n//         })\r\n//     })\r\n\r\n\r\n// }\r\n      \r\n  \r\n    \r\n    render() {\r\n        let todo=[]\r\n   \r\n   if(this.state.option===\"Completed\"){\r\n       todo=this.state.list.filter(items=>items.completed)\r\n    console.log(todo)}\r\n else if(this.state.option===\"Uncompleted\"){\r\n    todo=this.state.list.filter(items=>\r\n!items.completed)}\r\nelse{\r\n    todo=this.state.list\r\n}\r\n\r\n   \r\n        return (\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                flexDirection:'column',\r\n                alignItems:'center'\r\n            }}>\r\n           \r\n          \r\n                <Form   clickhandler={this.addtodo} inputhandler={this.inputhandler}  />\r\n                <select value={this.state.option} onChange={this.selecthandler} style={{height:\"30px\", textAlign:\"center\",border:\"2px slid black\"}}>\r\n                   <option  >All</option>\r\n                   <option>Completed</option>\r\n                   <option>Uncompleted</option>\r\n               </select>\r\n                {todo.map((items)=>{\r\n                    \r\n                    \r\n                    return <Todos    item={items} itemtext={items.text} key={items.id} itemskey={items.key} completehandler={()=>this.completehandler(items.id,Event)}  uncompletehandler={()=>this.uncompletehandler(items.id)} deletehandler={()=>this.deletehandler(items.id)}/>               })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todolist\r\n","\nimport './App.css';\nimport Header from './components/Header';\nimport Todolist from './components/todolist';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header/>\n  <Todolist/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}